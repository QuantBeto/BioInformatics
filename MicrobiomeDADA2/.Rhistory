setwd("/Volumes/Bioinfo/BioInformatics/MicrobiomeDADA2")
load("RData/physeq.RData")
plot_bar(physeq, fill = "Phylum") + geom_bar(aes(color=Phylum, fill=Phylum), stat="identity", position="fill")
library(phyloseq)
library(ggplot2)
plot_bar(physeq, fill = "Phylum") + geom_bar(aes(color=Phylum, fill=Phylum), stat="identity", position="fill")
# convert to relative abundance
phyloseq_relabund <- transform_sample_counts(physeq, function(x) x / sum(x))
# barplot
plot_bar(phyloseq_relabund, fill = "phylum") + geom_bar(aes(color=Phylum, fill=Phylum), stat="identify", position="fill") + facet_warp(~body.site, scales = "free")
# convert to relative abundance
phyloseq_relabund <- transform_sample_counts(physeq, function(x) x / sum(x))
# barplot
plot_bar(phyloseq_relabund, fill = "phylum") + geom_bar(aes(color=Phylum, fill=Phylum), stat="identity", position="fill") + facet_warp(~body.site, scales = "free")
# convert to relative abundance
phyloseq_relabund <- transform_sample_counts(physeq, function(x) x / sum(x))
# barplot
plot_bar(phyloseq_relabund, fill = "phylum") + geom_bar(aes(color=Phylum, fill=Phylum), stat="identity", position="fill") + facet_wrap(~body.site, scales = "free")
# convert to relative abundance
phyloseq_relabund <- transform_sample_counts(physeq, function(x) x / sum(x))
# barplot
plot_bar(phyloseq_relabund, fill = "Phylum") + geom_bar(aes(color=Phylum, fill=Phylum), stat="identity", position="fill") + facet_wrap(~body.site, scales = "free")
plot_richness(physeq, x="body.site", color= "subject", measures=c("Observed", "Simpson", "Shannon"))
plot_richness(physeq, x="reported.antibiotic.usage", color= "body.site", measures=c("Observed", "Simpson", "Shannon"))
plot_richness(physeq, x="subject", color= "body.site", measures=c("Observed", "Simpson", "Shannon"))
alpha <- estimate_richness(physeq, measures+c("Observed", "Simpson", "Shannon"))
alpha <- estimate_richness(physeq, measures=c("Observed", "Simpson", "Shannon"))
# shapiro-wilk
observed <- shapiro.test(alpha$Observed)
shannon <- shapiro.test(alpha$Shannon)
simpson <- shaporo.test(alpha$Simpson)
alpha <- estimate_richness(physeq, measures=c("Observed", "Simpson", "Shannon"))
# shapiro-wilk
observed <- shapiro.test(alpha$Observed)
shannon <- shapiro.test(alpha$Shannon)
simpson <- shapiro.test(alpha$Simpson)
# print
print(observed)
print(shannon)
print(simpson)
#extract sample information from the physeq object
samples <- sample_data(physeq)
# If samples is a phyloseq sample_data object, convert it to a data frame
if (class(samples) == "sample_data") {samples <- data.frame(sample_data(samples))}
# add a column to alpha with sample names
alpha$sample <- rownames(alpha)
# merge alpha diversity data and sample data
alpha <- merge(alpha, samples, by = "sample")
# perform t/wilcox tests for each biodiversity index
test_observed <- wilcox.test(Observed ~ subject, data = alpha)
tests_simpson <- wilcox.test(Simpson ~ subject, data = alpha)
test_shannon <- t.test(Shannon ~ subject, data = alpha)
# Printing the results
print(test_observed)
pring(test_impson)
# perform t/wilcox tests for each biodiversity index
test_observed <- wilcox.test(Observed ~ subject, data = alpha)
tests_simpson <- wilcox.test(Simpson ~ subject, data = alpha)
test_shannon <- t.test(Shannon ~ subject, data = alpha)
# Printing the results
print(test_observed)
print(test_impson)
# perform t/wilcox tests for each biodiversity index
test_observed <- wilcox.test(Observed ~ subject, data = alpha)
tests_simpson <- wilcox.test(Simpson ~ subject, data = alpha)
test_shannon <- t.test(Shannon ~ subject, data = alpha)
# Printing the results
print(test_observed)
print(test_simpson)
# perform t/wilcox tests for each biodiversity index
test_observed <- wilcox.test(Observed ~ subject, data = alpha)
test_simpson <- wilcox.test(Simpson ~ subject, data = alpha)
test_shannon <- t.test(Shannon ~ subject, data = alpha)
# Printing the results
print(test_observed)
print(test_simpson)
print(test_shannon)
# perform t/wilcox tests for each biodiversity index
test_observed <- wilcox.test(Observed ~ reported.antibiotic.usage, data = alpha)
test_simpson <- wilcox.test(Simpson ~ reported.antibiotic.usage, data = alpha)
test_shannon <- t.test(Shannon ~ reported.antibiotic.usage, data = alpha)
# Printing the results
print(test_observed)
print(test_simpson)
print(test_shannon)
kruskal.test(Simpson ~ body.site, data=alpha)
pairwise.wilcox.test(alpha$Simpson, alpha$body.site, p.adjust.meathod="holm")
kruskal.test(Observed ~ body.site, data=slpha)
kruskal.test(Simpson ~ body.site, data=alpha)
pairwise.wilcox.test(alpha$Simpson, alpha$body.site, p.adjust.meathod="holm")
kruskal.test(Observed ~ body.site, data=alpha)
pairwise.wilcox.test(alpha$Observed, alpha$body.site, p.adjust.meathod="holm")
shannonanova <- aov(Shannon ` body.site, data=alpha)
summary(shannonanova)
TukeyHSD(shannonanova)
kruskal.test(Simpson ~ body.site, data=alpha)
pairwise.wilcox.test(alpha$Simpson, alpha$body.site, p.adjust.meathod="holm")
kruskal.test(Observed ~ body.site, data=alpha)
pairwise.wilcox.test(alpha$Observed, alpha$body.site, p.adjust.meathod="holm")
shannonanova <- aov(Shannon ~ body.site, data=alpha)
summary(shannonanova)
TukeyHSD(shannonanova)
