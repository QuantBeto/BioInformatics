setwd("/Volumes/Bioinfo/BioInformatics/Final_Project")
library(ballgown)
library(RColorBrewer)
library(genefilter)
library(dplyr)
library(devtools)
pheno_data<-data.frame(ids = c("rep1", "rep2", "rep1", "rep2"),
stage = c("day21", "day21", "day35", "day35"))
samples.c <- paste('ballgown', pheno_data$ids, sep = '/')
bg <- ballgown(samples = samples.c, meas='all', pData = pheno_data)
pheno_data<-data.frame(ids = c("day2101", "day2102", "day3501", "day3502"),
stage = c("day21", "day21", "day35", "day35"))
samples.c <- paste('ballgown', pheno_data$ids, sep = '/')
bg <- ballgown(samples = samples.c, meas='all', pData = pheno_data)
bg
bg_filt = subset(bg,"rowVars(texpr(bg)) >1",genomesubset=TRUE)
bg_filt
results_transcripts<- stattest(bg_filt, feature = "transcript", covariate = "stage",
getFC = TRUE, meas = "FPKM")
results_transcripts<-data.frame(geneNames=geneNames(bg_filt),
transcriptNames=transcriptNames(bg_filt), results_transcripts)
View(results_transcripts)
View(results_transcripts)
results_transcripts[results_transcripts$transcriptNames == "MSTRG.7.13", ]
sigdiff <- results_transcripts %>% filter(pval<0.05)
dim(sigdiff)
o = order(sigdiff[,"pval"], -abs(sigdiff[,"fc"]), decreasing=FALSE)
output = sigdiff[o,c("geneNames","transcriptNames", "id","fc","pval","qval")]
write.table(output, file="SigDiff.txt", sep="\t", row.names=FALSE, quote=FALSE)
head(output)
bg_table = texpr(bg_filt, 'all')
bg_gene_names = unique(bg_table[, 9:10])
View(sigdiff)
View(bg_gene_names)
gene_expression = as.data.frame(gexpr(bg_filt))
head(gene_expression)
colnames(gene_expression) <- c("plank01", "plank02", "biofilm01", "biofilm02")
head(gene_expression)
dim(gene_expression)
colnames(gene_expression) <- c("day2101", "day2102", "day3501", "day3502")
head(gene_expression)
dim(gene_expression)
transcript_gene_table = indexes(bg)$t2g
head(transcript_gene_table)
length(row.names(transcript_gene_table))
length(unique(transcript_gene_table[,"g_id"]))
counts=table(transcript_gene_table[,"g_id"])
c_one = length(which(counts == 1))
c_more_than_one = length(which(counts > 1))
c_max = max(counts)
hist(counts, breaks=50, col="bisque4", xlab="Transcripts per gene",
main="Distribution of transcript count per gene")
legend_text = c(paste("Genes with one transcript =", c_one),
paste("Genes with more than one transcript =", c_more_than_one),
paste("Max transcripts for single gene = ", c_max))
legend("topright", legend_text, lty=NULL)
x = gene_expression[,"day2101"]
y = gene_expression[,"day2102"]
min_nonzero=1
plot(x=log2(x+min_nonzero), y=log2(y+min_nonzero), pch=16, col="purple", cex=0.25,
xlab="FPKM (Planktonic, Replicate 1)", ylab="FPKM (Planktonic, Replicate 2)",
main="Comparison of expression values for a pair of replicates")
abline(a=0,b=1, col = "hotpink")
rs=cor(x,y)^2
legend("topleft", paste("R squared = ", round(rs, digits=3), sep=""), lwd=1, col="black")
x = gene_expression[,"day3501"]
y = gene_expression[,"day3502"]
min_nonzero=1
plot(x=log2(x+min_nonzero), y=log2(y+min_nonzero), pch=16, col="purple", cex=0.25,
xlab="FPKM (Planktonic, Replicate 1)", ylab="FPKM (Planktonic, Replicate 2)",
main="Comparison of expression values for a pair of replicates")
abline(a=0,b=1, col = "hotpink")
rs=cor(x,y)^2
legend("topleft", paste("R squared = ", round(rs, digits=3), sep=""), lwd=1, col="black")
results_genes = stattest(bg_filt, feature="gene", covariate="stage", getFC=TRUE, meas="FPKM")
results_genes = merge(results_genes,bg_gene_names,by.x=c("id"),by.y=c("gene_id"))
sig=which(results_genes$pval<0.05)
results_genes[,"de"] = log2(results_genes[,"fc"])
hist(results_genes[sig,"de"], breaks=50, col="seagreen",
xlab="log2(Fold change) day21 vs day35",
main="Distribution of differential expression values")
abline(v=-2, col="black", lwd=2, lty=2)
abline(v=2, col="black", lwd=2, lty=2)
legend("topleft", "Fold-change > 4", lwd=2, lty=2)
x = gene_expression[,"day2101"]
y = gene_expression[,"day2102"]
min_nonzero=1
plot(x=log2(x+min_nonzero), y=log2(y+min_nonzero), pch=16, col="purple", cex=0.25,
xlab="FPKM (Day21, Replicate 1)", ylab="FPKM (Day21, Replicate 2)",
main="Comparison of expression values for a pair of replicates")
abline(a=0,b=1, col = "hotpink")
rs=cor(x,y)^2
legend("topleft", paste("R squared = ", round(rs, digits=3), sep=""), lwd=1, col="black")
x = gene_expression[,"day3501"]
y = gene_expression[,"day3502"]
min_nonzero=1
plot(x=log2(x+min_nonzero), y=log2(y+min_nonzero), pch=16, col="purple", cex=0.25,
xlab="FPKM (Day35, Replicate 1)", ylab="FPKM (Day35, Replicate 2)",
main="Comparison of expression values for a pair of replicates")
abline(a=0,b=1, col = "hotpink")
rs=cor(x,y)^2
legend("topleft", paste("R squared = ", round(rs, digits=3), sep=""), lwd=1, col="black")
gene_expression[,"day21"]=apply(gene_expression[,c(1:2)], 1, mean)
gene_expression[,"day35"]=apply(gene_expression[,c(3:4)], 1, mean)
x=log2(gene_expression[,"day21"]+min_nonzero)
y=log2(gene_expression[,"day35"]+min_nonzero)
plot(x=x, y=y, pch=16, cex=0.25, xlab="Day21 FPKM (log2)", ylab="Day35 FPKM (log2)",
main="Day21 vs Day35 FPKMs")
abline(a=0, b=1)
xsig=x[sig]
ysig=y[sig]
points(x=xsig, y=ysig, col="magenta", pch=16, cex=0.5)
legend("topleft", "Significant", col="magenta", pch=16)
fpkm = texpr(bg_filt,meas="FPKM")
transformed_fpkm <- log2(fpkm[3, ] + 1)
numeric_stages <- as.numeric(factor(pheno_data$stage))
jittered_stages <- jitter(numeric_stages)
boxplot(transformed_fpkm ~ pheno_data$stage,
main=paste(ballgown::geneNames(bg_filt)[2], ' : ', ballgown::transcriptNames(bg_filt)[2]),
xlab="Stage",
ylab="log2(FPKM+1)",
col=c("lightblue", "salmon"),
border="darkblue")
points(transformed_fpkm ~ jittered_stages,
pch=21, col="blue", bg="lightblue", cex=1.2)
